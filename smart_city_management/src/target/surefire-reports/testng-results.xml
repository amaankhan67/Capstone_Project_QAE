<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="104" passed="104" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-07T14:59:05 IST" name="Surefire suite" finished-at="2025-10-07T14:59:05 IST" duration-ms="217">
    <groups>
    </groups>
    <test started-at="2025-10-07T14:59:05 IST" name="Surefire test" finished-at="2025-10-07T14:59:05 IST" duration-ms="217">
      <class name="com.city.service.ComplaintServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testComplaintIdAutoGeneration()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testComplaintIdAutoGeneration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComplaintIdAutoGeneration -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetComplaintsByPriority()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testGetComplaintsByPriority" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComplaintsByPriority -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetComplaintsByPriorityWithNullPriority()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testGetComplaintsByPriorityWithNullPriority" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Priority cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Priority cannot be null
at com.city.repository.ComplaintRepository.getComplaintsByPriority(ComplaintRepository.java:86)
at com.city.service.ComplaintService.getComplaintsByPriority(ComplaintService.java:91)
at com.city.service.ComplaintServiceTest.testGetComplaintsByPriorityWithNullPriority(ComplaintServiceTest.java:212)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComplaintsByPriorityWithNullPriority -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaint(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaint" data-provider="registerComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C009]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ELECTRICITY]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Flickering lights in building]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[LOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaint -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaint(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaint" data-provider="registerComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C010]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Cracked pavement causing accidents]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaint -->
        <test-method signature="testRegisterComplaint(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaint" data-provider="registerComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C011]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WATER]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[No water supply since yesterday]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[MEDIUM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaint -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaint(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaint" data-provider="registerComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C012]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ELECTRICITY]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Electrical wiring exposed on pole]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[LOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaint -->
        <test-method signature="testRegisterComplaintWithEmptyCitizenId()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithEmptyCitizenId" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Citizen ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Citizen ID cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:34)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithEmptyCitizenId(ComplaintServiceTest.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithEmptyCitizenId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithEmptyDescription()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithEmptyDescription" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Description cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Description cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:40)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithEmptyDescription(ComplaintServiceTest.java:146)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithEmptyDescription -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Description]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Citizen ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Citizen ID cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:34)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Description]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Citizen ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Citizen ID cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:34)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C001]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[Description]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Category cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Category cannot be null
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:37)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Description cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Description cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:40)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Description cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Description cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:40)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Description]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Priority cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Priority cannot be null
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:43)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithInvalidData(java.lang.String,com.city.model.Complaint$Category,java.lang.String,com.city.model.Complaint$Priority)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithInvalidData" data-provider="invalidComplaintData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NON_EXISTENT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ROAD]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Description]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Citizen with ID NON_EXISTENT not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Citizen with ID NON_EXISTENT not found
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:48)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithInvalidData(ComplaintServiceTest.java:108)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithInvalidData -->
        <test-method signature="testRegisterComplaintWithNonExistentCitizen()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithNonExistentCitizen" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Citizen with ID NON_EXISTENT not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Citizen with ID NON_EXISTENT not found
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:48)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithNonExistentCitizen(ComplaintServiceTest.java:156)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithNonExistentCitizen -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithNullCategory()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithNullCategory" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Category cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Category cannot be null
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:37)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithNullCategory(ComplaintServiceTest.java:136)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithNullCategory -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithNullCitizenId()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithNullCitizenId" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Citizen ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Citizen ID cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:34)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithNullCitizenId(ComplaintServiceTest.java:126)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithNullCitizenId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithNullDescription()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithNullDescription" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Description cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Description cannot be null or empty
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:40)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithNullDescription(ComplaintServiceTest.java:141)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithNullDescription -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterComplaintWithNullPriority()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testRegisterComplaintWithNullPriority" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint Priority cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint Priority cannot be null
at com.city.service.ComplaintService.registerComplaint(ComplaintService.java:43)
at com.city.service.ComplaintServiceTest.testRegisterComplaintWithNullPriority(ComplaintServiceTest.java:151)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterComplaintWithNullPriority -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus(int)[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus" data-provider="Iteration" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatusWithEmptyComplaintId()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatusWithEmptyComplaintId" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint ID cannot be null or empty
at com.city.service.ComplaintService.updateComplaintStatus(ComplaintService.java:61)
at com.city.service.ComplaintServiceTest.testUpdateComplaintStatusWithEmptyComplaintId(ComplaintServiceTest.java:187)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatusWithEmptyComplaintId -->
        <test-method signature="testUpdateComplaintStatusWithNonExistentComplaint()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatusWithNonExistentComplaint" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Complaint with ID NON_EXISTENT not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Complaint with ID NON_EXISTENT not found
at com.city.service.ComplaintService.updateComplaintStatus(ComplaintService.java:69)
at com.city.service.ComplaintServiceTest.testUpdateComplaintStatusWithNonExistentComplaint(ComplaintServiceTest.java:197)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatusWithNonExistentComplaint -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatusWithNullStatus()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatusWithNullStatus" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Status cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Status cannot be null
at com.city.service.ComplaintService.updateComplaintStatus(ComplaintService.java:64)
at com.city.service.ComplaintServiceTest.testUpdateComplaintStatusWithNullStatus(ComplaintServiceTest.java:192)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatusWithNullStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateComplaintStatus_NullComplaintId_ThrowsException()[pri:0, instance:com.city.service.ComplaintServiceTest@7fc229ab]" started-at="2025-10-07T14:59:05 IST" name="testUpdateComplaintStatus_NullComplaintId_ThrowsException" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Complaint ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Complaint ID cannot be null or empty
at com.city.service.ComplaintService.updateComplaintStatus(ComplaintService.java:61)
at com.city.service.ComplaintServiceTest.testUpdateComplaintStatus_NullComplaintId_ThrowsException(ComplaintServiceTest.java:182)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateComplaintStatus_NullComplaintId_ThrowsException -->
      </class> <!-- com.city.service.ComplaintServiceTest -->
      <class name="com.city.service.UtilityMonitoringServiceTest">
        <test-method signature="testDetectAnomalies()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testDetectAnomalies" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDetectAnomalies -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDetectAnomaliesWithNegativeThreshold()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testDetectAnomaliesWithNegativeThreshold" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Threshold value cannot be negative]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Threshold value cannot be negative
at com.city.service.UtilityMonitoringService.detectAnomalies(UtilityMonitoringService.java:87)
at com.city.service.UtilityMonitoringServiceTest.testDetectAnomaliesWithNegativeThreshold(UtilityMonitoringServiceTest.java:165)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDetectAnomaliesWithNegativeThreshold -->
        <test-method signature="testDetectAnomaliesWhereNoAnomalies()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testDetectAnomaliesWhereNoAnomalies" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDetectAnomaliesWhereNoAnomalies -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBill(java.lang.String,com.city.model.UtilityMeter$UtilityType)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBill" data-provider="generateBillData" finished-at="2025-10-07T14:59:05 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROP002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ELECTRICITY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBill -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBill(java.lang.String,com.city.model.UtilityMeter$UtilityType)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBill" data-provider="generateBillData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROP002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GAS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBill -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBill(java.lang.String,com.city.model.UtilityMeter$UtilityType)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBill" data-provider="generateBillData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROP005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WATER]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBill -->
        <test-method signature="testGenerateBill(java.lang.String,com.city.model.UtilityMeter$UtilityType)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBill" data-provider="generateBillData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PROP005]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ELECTRICITY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBill -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBillNoMeterForUtilityType()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBillNoMeterForUtilityType" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Utility meter for GAS not found for property PROP001]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Utility meter for GAS not found for property PROP001
at com.city.service.UtilityMonitoringService.generateBill(UtilityMonitoringService.java:70)
at com.city.service.UtilityMonitoringServiceTest.testGenerateBillNoMeterForUtilityType(UtilityMonitoringServiceTest.java:146)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBillNoMeterForUtilityType -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBillWithEmptyPropertyId()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBillWithEmptyPropertyId" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Property ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Property ID cannot be null or empty
at com.city.service.UtilityMonitoringService.generateBill(UtilityMonitoringService.java:50)
at com.city.service.UtilityMonitoringServiceTest.testGenerateBillWithEmptyPropertyId(UtilityMonitoringServiceTest.java:131)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBillWithEmptyPropertyId -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBillWithNonExistentProperty()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBillWithNonExistentProperty" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[No utility meters found for property: NON_EXISTENT]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: No utility meters found for property: NON_EXISTENT
at com.city.service.UtilityMonitoringService.generateBill(UtilityMonitoringService.java:59)
at com.city.service.UtilityMonitoringServiceTest.testGenerateBillWithNonExistentProperty(UtilityMonitoringServiceTest.java:141)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBillWithNonExistentProperty -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGenerateBillWithNullUtilityType()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBillWithNullUtilityType" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Utility type cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Utility type cannot be null
at com.city.service.UtilityMonitoringService.generateBill(UtilityMonitoringService.java:54)
at com.city.service.UtilityMonitoringServiceTest.testGenerateBillWithNullUtilityType(UtilityMonitoringServiceTest.java:136)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBillWithNullUtilityType -->
        <test-method signature="testGenerateBillWithNullPropertyId()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testGenerateBillWithNullPropertyId" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Property ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Property ID cannot be null or empty
at com.city.service.UtilityMonitoringService.generateBill(UtilityMonitoringService.java:50)
at com.city.service.UtilityMonitoringServiceTest.testGenerateBillWithNullPropertyId(UtilityMonitoringServiceTest.java:126)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateBillWithNullPropertyId -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumption(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumption" data-provider="utilityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UM002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000.25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumption -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumption(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumption" data-provider="utilityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UM004]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[407.55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumption -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumption(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumption" data-provider="utilityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UM007]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[821.08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumption -->
        <test-method signature="testRecordUtilityConsumption(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumption" data-provider="utilityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UM011]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[381.17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumption -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionForInvalidData(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionForInvalidData" data-provider="invalidConsumptionData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000.0]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Meter ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Meter ID cannot be null or empty
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:27)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionForInvalidData(UtilityMonitoringServiceTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionForInvalidData -->
        <test-method signature="testRecordUtilityConsumptionForInvalidData(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionForInvalidData" data-provider="invalidConsumptionData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000.0]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Meter ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Meter ID cannot be null or empty
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:27)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionForInvalidData(UtilityMonitoringServiceTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionForInvalidData -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionForInvalidData(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionForInvalidData" data-provider="invalidConsumptionData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UM001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000.0]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[New reading cannot be less than current reading]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: New reading cannot be less than current reading
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:41)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionForInvalidData(UtilityMonitoringServiceTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionForInvalidData -->
        <test-method signature="testRecordUtilityConsumptionForInvalidData(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionForInvalidData" data-provider="invalidConsumptionData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UM001]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-100.0]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Meter Reading cannot be negative]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Meter Reading cannot be negative
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:31)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionForInvalidData(UtilityMonitoringServiceTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionForInvalidData -->
        <test-method signature="testRecordUtilityConsumptionForInvalidData(java.lang.String,double)[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionForInvalidData" data-provider="invalidConsumptionData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1000.0]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Meter with ID INVALID not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Meter with ID INVALID not found
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:36)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionForInvalidData(UtilityMonitoringServiceTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionForInvalidData -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionWithEmptyString()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionWithEmptyString" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Meter ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Meter ID cannot be null or empty
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:27)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionWithEmptyString(UtilityMonitoringServiceTest.java:87)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionWithEmptyString -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionWithLessReading()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionWithLessReading" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[New reading cannot be less than current reading]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: New reading cannot be less than current reading
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:41)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionWithLessReading(UtilityMonitoringServiceTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionWithLessReading -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionWithNull()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionWithNull" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Meter ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Meter ID cannot be null or empty
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:27)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionWithNull(UtilityMonitoringServiceTest.java:92)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionWithNull -->
        <test-method signature="testRecordUtilityConsumptionWithNegativeReading()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionWithNegativeReading" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Meter Reading cannot be negative]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Meter Reading cannot be negative
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:31)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionWithNegativeReading(UtilityMonitoringServiceTest.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionWithNegativeReading -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionWithSameReading()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionWithSameReading" description="Testing for Edge Cases" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionWithSameReading -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRecordUtilityConsumptionWithWrongMeter()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="testRecordUtilityConsumptionWithWrongMeter" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Meter with ID WRONG_METER not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Meter with ID WRONG_METER not found
at com.city.service.UtilityMonitoringService.recordUtilityConsumption(UtilityMonitoringService.java:36)
at com.city.service.UtilityMonitoringServiceTest.testRecordUtilityConsumptionWithWrongMeter(UtilityMonitoringServiceTest.java:97)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordUtilityConsumptionWithWrongMeter -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.city.service.UtilityMonitoringServiceTest@1198b989]" started-at="2025-10-07T14:59:05 IST" name="setup" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.city.service.UtilityMonitoringServiceTest -->
      <class name="com.city.service.EmergencyServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDispatchEmergencyService()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testDispatchEmergencyService" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispatchEmergencyService -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDispatchEmergencyServiceForAlreadyResolvedAlert()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testDispatchEmergencyServiceForAlreadyResolvedAlert" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.EmergencyPriorityException">
            <message>
              <![CDATA[Emergency alert FIR1 is already resolved or closed]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.EmergencyPriorityException: Emergency alert FIR1 is already resolved or closed
at com.city.service.EmergencyService.dispatchEmergencyService(EmergencyService.java:61)
at com.city.service.EmergencyServiceTest.testDispatchEmergencyServiceForAlreadyResolvedAlert(EmergencyServiceTest.java:161)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.EmergencyPriorityException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispatchEmergencyServiceForAlreadyResolvedAlert -->
        <test-method signature="testDispatchEmergencyServiceForNonExistentAlert()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testDispatchEmergencyServiceForNonExistentAlert" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Emergency alert with ID NON_EXISTENT not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Emergency alert with ID NON_EXISTENT not found
at com.city.service.EmergencyService.dispatchEmergencyService(EmergencyService.java:56)
at com.city.service.EmergencyServiceTest.testDispatchEmergencyServiceForNonExistentAlert(EmergencyServiceTest.java:147)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispatchEmergencyServiceForNonExistentAlert -->
        <test-method signature="testDispatchEmergencyServiceWithEmptyAlertId()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testDispatchEmergencyServiceWithEmptyAlertId" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Alert ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Alert ID cannot be null or empty
at com.city.service.EmergencyService.dispatchEmergencyService(EmergencyService.java:51)
at com.city.service.EmergencyServiceTest.testDispatchEmergencyServiceWithEmptyAlertId(EmergencyServiceTest.java:142)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispatchEmergencyServiceWithEmptyAlertId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDispatchEmergencyServiceWithNullAlertId()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testDispatchEmergencyServiceWithNullAlertId" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Alert ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Alert ID cannot be null or empty
at com.city.service.EmergencyService.dispatchEmergencyService(EmergencyService.java:51)
at com.city.service.EmergencyServiceTest.testDispatchEmergencyServiceWithNullAlertId(EmergencyServiceTest.java:137)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispatchEmergencyServiceWithNullAlertId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetActiveEmergencies()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testGetActiveEmergencies" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetActiveEmergencies -->
        <test-method signature="testGetEmergenciesByStatus()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testGetEmergenciesByStatus" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEmergenciesByStatus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlert()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlert" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlert -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlertForHighSeverityCapacityExceeded()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlertForHighSeverityCapacityExceeded" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.EmergencyPriorityException">
            <message>
              <![CDATA[Cannot process more high severity Emergencies]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.EmergencyPriorityException: Cannot process more high severity Emergencies
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:38)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlertForHighSeverityCapacityExceeded(EmergencyServiceTest.java:118)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.EmergencyPriorityException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlertForHighSeverityCapacityExceeded -->
        <test-method signature="testRaiseEmergencyAlertWithEmptyLocation()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlertWithEmptyLocation" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Location cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Location cannot be null or empty
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:29)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlertWithEmptyLocation(EmergencyServiceTest.java:106)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlertWithEmptyLocation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlertWithNullLocation()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlertWithNullLocation" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Location cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Location cannot be null or empty
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:29)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlertWithNullLocation(EmergencyServiceTest.java:101)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlertWithNullLocation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlertWithNullSeverity()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlertWithNullSeverity" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Severity cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Severity cannot be null
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:32)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlertWithNullSeverity(EmergencyServiceTest.java:111)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlertWithNullSeverity -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlertWithNullType()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlertWithNullType" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Alert Type cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Alert Type cannot be null
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:26)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlertWithNullType(EmergencyServiceTest.java:96)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlertWithNullType -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlert_InvalidData_ThrowsException(com.city.model.EmergencyAlert$Type,java.lang.String,com.city.model.EmergencyAlert$Severity)[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlert_InvalidData_ThrowsException" data-provider="invalidEmergencyData" finished-at="2025-10-07T14:59:05 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[Location]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Alert Type cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Alert Type cannot be null
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:26)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlert_InvalidData_ThrowsException(EmergencyServiceTest.java:81)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlert_InvalidData_ThrowsException -->
        <test-method signature="testRaiseEmergencyAlert_InvalidData_ThrowsException(com.city.model.EmergencyAlert$Type,java.lang.String,com.city.model.EmergencyAlert$Severity)[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlert_InvalidData_ThrowsException" data-provider="invalidEmergencyData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FIRE]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Location cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Location cannot be null or empty
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:29)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlert_InvalidData_ThrowsException(EmergencyServiceTest.java:81)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlert_InvalidData_ThrowsException -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlert_InvalidData_ThrowsException(com.city.model.EmergencyAlert$Type,java.lang.String,com.city.model.EmergencyAlert$Severity)[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlert_InvalidData_ThrowsException" data-provider="invalidEmergencyData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FIRE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[HIGH]]>
              </value>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Location cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Location cannot be null or empty
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:29)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlert_InvalidData_ThrowsException(EmergencyServiceTest.java:81)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlert_InvalidData_ThrowsException -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRaiseEmergencyAlert_InvalidData_ThrowsException(com.city.model.EmergencyAlert$Type,java.lang.String,com.city.model.EmergencyAlert$Severity)[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="testRaiseEmergencyAlert_InvalidData_ThrowsException" data-provider="invalidEmergencyData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FIRE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Location]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Emergency Severity cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Emergency Severity cannot be null
at com.city.service.EmergencyService.raiseEmergencyAlert(EmergencyService.java:32)
at com.city.service.EmergencyServiceTest.testRaiseEmergencyAlert_InvalidData_ThrowsException(EmergencyServiceTest.java:81)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaiseEmergencyAlert_InvalidData_ThrowsException -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.EmergencyServiceTest@2cbb3d47]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.city.service.EmergencyServiceTest -->
      <class name="com.city.service.AnalyticsServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateEmergencyReport()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGenerateEmergencyReport" finished-at="2025-10-07T14:59:05 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateEmergencyReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateEmergencyReport_NoData()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGenerateEmergencyReport_NoData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateEmergencyReport_NoData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateTrafficReport()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGenerateTrafficReport" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateTrafficReport -->
        <test-method signature="testGenerateTrafficReportWithNoData()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGenerateTrafficReportWithNoData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateTrafficReportWithNoData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGenerateUtilityConsumptionReport()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGenerateUtilityConsumptionReport" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateUtilityConsumptionReport -->
        <test-method signature="testGenerateUtilityConsumptionReportWithNoData()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGenerateUtilityConsumptionReportWithNoData" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateUtilityConsumptionReportWithNoData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetComplaintStatistics()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGetComplaintStatistics" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComplaintStatistics -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetComplaintStatisticsWithNoData()[pri:0, instance:com.city.service.AnalyticsServiceTest@3ee0fea4]" started-at="2025-10-07T14:59:05 IST" name="testGetComplaintStatisticsWithNoData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComplaintStatisticsWithNoData -->
      </class> <!-- com.city.service.AnalyticsServiceTest -->
      <class name="com.city.service.TrafficManagementServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testHighTrafficAreas()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testHighTrafficAreas" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHighTrafficAreas -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testHighTrafficAreasForInactiveSensor()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testHighTrafficAreasForInactiveSensor" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHighTrafficAreasForInactiveSensor -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testHighTrafficAreasWithNegativeThreshold()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testHighTrafficAreasWithNegativeThreshold" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Threshold cannot be negative]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Threshold cannot be negative
at com.city.service.TrafficManagementService.getHighTrafficAreas(TrafficManagementService.java:51)
at com.city.service.TrafficManagementServiceTest.testHighTrafficAreasWithNegativeThreshold(TrafficManagementServiceTest.java:117)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHighTrafficAreasWithNegativeThreshold -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOptimizeTrafficSignal()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testOptimizeTrafficSignal" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeTrafficSignal -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testOptimizeTrafficSignalForInactiveArea()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testOptimizeTrafficSignalForInactiveArea" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[No Active Sensors in area: West Expressway]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: No Active Sensors in area: West Expressway
at com.city.service.TrafficManagementService.optimizeTrafficSignals(TrafficManagementService.java:86)
at com.city.service.TrafficManagementServiceTest.testOptimizeTrafficSignalForInactiveArea(TrafficManagementServiceTest.java:154)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeTrafficSignalForInactiveArea -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testOptimizeTrafficSignalWithEmptyString()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testOptimizeTrafficSignalWithEmptyString" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Area cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Area cannot be null or empty
at com.city.service.TrafficManagementService.optimizeTrafficSignals(TrafficManagementService.java:67)
at com.city.service.TrafficManagementServiceTest.testOptimizeTrafficSignalWithEmptyString(TrafficManagementServiceTest.java:144)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeTrafficSignalWithEmptyString -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOptimizeTrafficSignalWithNull()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testOptimizeTrafficSignalWithNull" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Area cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Area cannot be null or empty
at com.city.service.TrafficManagementService.optimizeTrafficSignals(TrafficManagementService.java:67)
at com.city.service.TrafficManagementServiceTest.testOptimizeTrafficSignalWithNull(TrafficManagementServiceTest.java:139)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeTrafficSignalWithNull -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testOptimizeTrafficSignalWithWrongArea()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testOptimizeTrafficSignalWithWrongArea" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[No Sensor found in area: WRONG_AREA]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: No Sensor found in area: WRONG_AREA
at com.city.service.TrafficManagementService.optimizeTrafficSignals(TrafficManagementService.java:72)
at com.city.service.TrafficManagementServiceTest.testOptimizeTrafficSignalWithWrongArea(TrafficManagementServiceTest.java:149)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimizeTrafficSignalWithWrongArea -->
        <test-method signature="testUpdateTrafficDensity()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensity" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensity -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testUpdateTrafficDensityForInactiveSensor()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityForInactiveSensor" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Sensor with ID TS006 is not active]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Sensor with ID TS006 is not active
at com.city.service.TrafficManagementService.updateTrafficDensity(TrafficManagementService.java:38)
at com.city.service.TrafficManagementServiceTest.testUpdateTrafficDensityForInactiveSensor(TrafficManagementServiceTest.java:102)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityForInactiveSensor -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateTrafficDensityWithDataProvider(java.lang.String,int)[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithDataProvider" data-provider="trafficDensityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithDataProvider -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testUpdateTrafficDensityWithDataProvider(java.lang.String,int)[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithDataProvider" data-provider="trafficDensityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS010]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithDataProvider -->
        <test-method signature="testUpdateTrafficDensityWithDataProvider(java.lang.String,int)[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithDataProvider" data-provider="trafficDensityData" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TS008]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[80]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithDataProvider -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateTrafficDensityWithEmptyString()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithEmptyString" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Sensor ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Sensor ID cannot be null or empty
at com.city.service.TrafficManagementService.updateTrafficDensity(TrafficManagementService.java:25)
at com.city.service.TrafficManagementServiceTest.testUpdateTrafficDensityWithEmptyString(TrafficManagementServiceTest.java:87)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithEmptyString -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testUpdateTrafficDensityWithNegativeDensity()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithNegativeDensity" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Traffic Density cannot be negative]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Traffic Density cannot be negative
at com.city.service.TrafficManagementService.updateTrafficDensity(TrafficManagementService.java:28)
at com.city.service.TrafficManagementServiceTest.testUpdateTrafficDensityWithNegativeDensity(TrafficManagementServiceTest.java:92)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithNegativeDensity -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testUpdateTrafficDensityWithNonExistingSensor()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithNonExistingSensor" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <exception class="com.city.exception.ServiceUnavailableException">
            <message>
              <![CDATA[Sensor with ID WRONG_SENSOR not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.ServiceUnavailableException: Sensor with ID WRONG_SENSOR not found
at com.city.service.TrafficManagementService.updateTrafficDensity(TrafficManagementService.java:33)
at com.city.service.TrafficManagementServiceTest.testUpdateTrafficDensityWithNonExistingSensor(TrafficManagementServiceTest.java:97)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.ServiceUnavailableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithNonExistingSensor -->
        <test-method signature="testUpdateTrafficDensityWithNull()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="testUpdateTrafficDensityWithNull" finished-at="2025-10-07T14:59:05 IST" duration-ms="1" status="PASS">
          <exception class="com.city.exception.InvalidInputException">
            <message>
              <![CDATA[Sensor ID cannot be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.city.exception.InvalidInputException: Sensor ID cannot be null or empty
at com.city.service.TrafficManagementService.updateTrafficDensity(TrafficManagementService.java:25)
at com.city.service.TrafficManagementServiceTest.testUpdateTrafficDensityWithNull(TrafficManagementServiceTest.java:82)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- com.city.exception.InvalidInputException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateTrafficDensityWithNull -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="setUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:com.city.service.TrafficManagementServiceTest@527e5409]" started-at="2025-10-07T14:59:05 IST" name="cleanUp" finished-at="2025-10-07T14:59:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- com.city.service.TrafficManagementServiceTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
